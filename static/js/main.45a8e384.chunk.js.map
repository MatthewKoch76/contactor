{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","toggleDetails","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","website","className","onClick","react_router_dom","to","bind","Contacts","Fragment","contacts_Contact","About","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","NotFound","Test","title","body","console","log","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45a8e384.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext()\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n    this.setState({ contacts: res.data })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../context'\r\nimport '../contacts/contact.css'\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  }\r\n\r\n  toggleDetails = () => this.setState({\r\n    showContactInfo: !this.state.showContactInfo\r\n  })\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, name, email, phone, website } = this.props.contact\r\n    const { showContactInfo } = this.state\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h5>{name}{' '}\r\n                <i className=\"far fa-address-card app-btn\"\r\n                  onClick={() => {\r\n                    this.toggleDetails()\r\n                  }}>\r\n                </i>\r\n\r\n                <Link to={`contact/edit/${id}`} className=\"fas fa-edit app-btn\">\r\n                </Link>\r\n                <i className=\"fas fa-skull app-btn\"\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}>\r\n                </i>\r\n              </h5>\r\n              {showContactInfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                <li className=\"list-group-item\">Website: {website}</li>\r\n              </ul>) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Contact","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context'\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-3\">Contact List</h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">app to manage contacts</p>\r\n      <p className=\"text-secondary\">1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\"></i></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\"></i></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\"></i></Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\n\r\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', { 'is-invalid': error })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange} />\r\n      {error && <div className=\"invalid-feedback\">\r\n        {error}\r\n      </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    website: '',\r\n    errors: {}\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault()\r\n    const { name, email, phone, website } = this.state\r\n\r\n    //check for empty fields\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'name required' } })\r\n      return\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'email required' } })\r\n      return\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'phone required' } })\r\n      return\r\n    }\r\n\r\n    if (website === '') {\r\n      this.setState({ errors: { website: 'website required' } })\r\n      return\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      website\r\n    }\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data })\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      website: '',\r\n      errors: {}\r\n    })\r\n\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n  render() {\r\n    const { name, email, phone, website, errors } = this.state\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Website\"\r\n                    name=\"website\"\r\n                    placeholder=\"Enter Website\"\r\n                    value={website}\r\n                    onChange={this.onChange}\r\n                    error={errors.website}\r\n                  />\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    website: '',\r\n    errors: {}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n    const contact = res.data\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n      website: contact.website\r\n    })\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault()\r\n    const { name, email, phone, website } = this.state\r\n\r\n    //check for empty fields\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'name required' } })\r\n      return\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'email required' } })\r\n      return\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'phone required' } })\r\n      return\r\n    }\r\n\r\n    if (website === '') {\r\n      this.setState({ errors: { website: 'website required' } })\r\n      return\r\n    }\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      website\r\n    }\r\n\r\n    const { id } = this.props.match.params\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact)\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data })\r\n\r\n    //clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      website: '',\r\n      errors: {}\r\n    })\r\n\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n  render() {\r\n    const { name, email, phone, website, errors } = this.state\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Website\"\r\n                    name=\"website\"\r\n                    placeholder=\"Enter Website\"\r\n                    value={website}\r\n                    onChange={this.onChange}\r\n                    error={errors.website}\r\n                  />\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">NOPE, GOSH</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: '',\r\n    body: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('bang')\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({ title: data.title, body: data.body }))\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state\r\n    return (\r\n      <div>\r\n        <p>{title}</p>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test","import React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts'\nimport About from './components/pages/About'\nimport Header from './components/layout/Header'\nimport { Provider } from './context'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './App.css'\nimport AddContact from './components/contacts/AddContact'\nimport EditContact from './components/contacts/EditContact'\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nconst App = () => {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={Test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}